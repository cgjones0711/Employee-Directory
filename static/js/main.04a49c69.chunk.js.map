{"version":3,"sources":["components/SearchForm.js","components/ResultList.js","utils/API.js","components/SearchResultContainer.js","App.js","index.js"],"names":["SearchForm","props","className","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","ResultList","employees","results","console","log","map","employee","alt","src","picture","thumbnail","first","last","location","state","cell","axios","get","SearchResultContainer","searchEmployee","API","then","res","setState","data","catch","err","event","target","preventDefault","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uLAwBeA,MAtBf,SAAoBC,GAClB,OACE,+BACE,sBAAKC,UAAU,aAAf,UACE,uBAAOC,QAAQ,SAAf,qBACA,uBACEC,SAAUH,EAAMI,kBAChBC,MAAOL,EAAMM,OACbC,KAAK,SACLC,KAAK,OACLP,UAAU,eACVQ,YAAY,yBACZC,GAAG,WAEL,wBAAQC,QAASX,EAAMY,iBAAkBX,UAAU,uBAAnD,yCCUOY,MAzBf,SAAoBb,GAClB,IAAIc,EAAYd,EAAMe,QAEtB,OADAC,QAAQC,IAAIjB,EAAMe,SAEhB,oBAAId,UAAU,aAAd,SACGa,EAAUI,KAAI,SAACC,GAAD,OACb,qBAAwBlB,UAAU,iBAAlC,UACE,qBACEmB,IAAI,qBACJC,IAAKF,EAASG,QAAQC,UACtBtB,UAAU,cAEXkB,EAASZ,KAAKiB,MAEdL,EAASZ,KAAKkB,KAEdN,EAASO,SAASC,MAElBR,EAASS,OAZHT,EAASS,Y,iBCDX,EACL,WACN,OAAOC,IAAMC,IAND,gFCyDDC,E,4MArDbJ,MAAQ,CACNrB,OAAQ,GACRS,QAAS,I,EAUXiB,eAAiB,WACfC,IAEGC,MAAK,SAAAC,GAAG,OAGH,EAAKC,SAAS,CAAErB,QAASoB,EAAIE,KAAKtB,aAEvCuB,OAAM,SAAAC,GAAG,OAAIvB,QAAQC,IAAIsB,O,EAG9BnC,kBAAoB,SAAAoC,GAClB,IAAMjC,EAAOiC,EAAMC,OAAOlC,KACpBF,EAAQmC,EAAMC,OAAOpC,MAE3B,EAAK+B,SAAL,eACG7B,EAAOF,K,EAMZO,iBAAmB,SAAA4B,GACjBA,EAAME,iBACN,EAAKV,kB,uDA5BP,WACEW,KAAKX,mB,oBA8BP,WACE,OACE,gCACE,cAAC,EAAD,CACE1B,OAAQqC,KAAKhB,MAAMrB,OACnBM,iBAAkB+B,KAAK/B,iBACvBR,kBAAmBuC,KAAKvC,oBAE1B,cAAC,EAAD,CAAYW,QAAS4B,KAAKhB,MAAMZ,iB,GAhDJ6B,aCErBC,MAJf,WACE,OAAO,cAAC,EAAD,K,MCCTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.04a49c69.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for an Employee\"\n          id=\"search\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n          Search Employee Lists\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nfunction ResultList(props) {\n  let employees = props.results;\n  console.log(props.results);\n  return (\n    <ul className=\"list-group\">\n      {employees.map((employee) => (\n        <li key={employee.cell} className=\"list-group-row\">\n          <img\n            alt=\"employee.name.last\"\n            src={employee.picture.thumbnail}\n            className=\"img-fluid\"\n          />\n          {employee.name.first}\n\n          {employee.name.last}\n         \n          {employee.location.state}\n         \n          {employee.cell}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ResultList;\n","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?inc=picture,name,location,email,cell&results=100\";\n\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\nexport default {\n  search: function() {\n    return axios.get(BASEURL);\n  }\n};\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport API from \"../utils/API\";\n\nclass SearchResultContainer extends Component {\n  state = {\n    search: \"\",\n    results: [\n      \n    ]\n  };\n\n  // When this component mounts, search the API for data of employees\n  componentDidMount() {\n    this.searchEmployee();\n  }\n\n  searchEmployee = () => {\n    API.search()\n\n      .then(res => \n          \n            \n            this.setState({ results: res.data.results })\n          )\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n \n    this.setState({\n      [name]: value,\n      \n    });\n  };\n\n  // When the form is submitted, search the employee API for `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchEmployee();\n  };\n\n  render() {\n    return (\n      <div>\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <ResultList results={this.state.results} />\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n","import React from \"react\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\n\nfunction App() {\n  return <SearchResultContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}